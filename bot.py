import json
import threading
import signal
import sys
import os
from telegram import Bot, Update
from telegram.ext import Updater, CommandHandler, MessageHandler, Filters, CallbackContext

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω—ã–π —Ñ–∞–π–ª
CONFIG_FILE = "bot_config.json"

def load_config():
    if os.path.exists(CONFIG_FILE):
        try:
            with open(CONFIG_FILE, 'r') as f:
                return json.load(f)
        except json.JSONDecodeError:
            print("‚ö†Ô∏è –û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è –∫–æ–Ω—Ñ–∏–≥–∞. –°–æ–∑–¥–∞—é –Ω–æ–≤—ã–π.")
    return {
        "token": "–í–ê–®_–¢–û–ö–ï–ù_–ë–û–¢–ê",
        "admin_id": "–í–ê–®_TELEGRAM_ID",
        "commands": {},
        "channels": {},
        "subscribers": []
    }

def save_config(config):
    with open(CONFIG_FILE, 'w') as f:
        json.dump(config, f, indent=4, ensure_ascii=False)

config = load_config()

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞
bot = None
updater = None
dispatcher = None

def start(update: Update, context: CallbackContext):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /start"""
    user_id = update.effective_user.id
    update.message.reply_text(
        f"üëã –ü—Ä–∏–≤–µ—Ç! –¢–≤–æ–π ID: `{user_id}`\n"
        "–ò—Å–ø–æ–ª—å–∑—É–π /help –¥–ª—è —Å–ø–∏—Å–∫–∞ –∫–æ–º–∞–Ω–¥",
        parse_mode='Markdown'
    )

def help_command(update: Update, context: CallbackContext):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /help"""
    commands_list = "\n".join([f"/{cmd}" for cmd in config["commands"]])
    update.message.reply_text(
        f"üìö –î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:\n{commands_list or '–ü–æ–∫–∞ –Ω–µ—Ç –∫–æ–º–∞–Ω–¥'}\n"
        "‚ÑπÔ∏è –ò—Å–ø–æ–ª—å–∑—É–π /check –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–æ–¥–ø–∏—Å–æ–∫"
    )

def check_subscription(update: Update, context: CallbackContext):
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–ø–∏—Å–∫–∏ –Ω–∞ –∫–∞–Ω–∞–ª—ã"""
    user_id = update.effective_user.id
    not_subscribed = []
    
    for channel_id, data in config["channels"].items():
        try:
            member = bot.get_chat_member(chat_id=channel_id, user_id=user_id)
            if member.status not in ["member", "administrator", "creator"]:
                not_subscribed.append(f"[{data['name']}](https://t.me/{data.get('username', '')})")
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–æ–¥–ø–∏—Å–∫–∏: {str(e)}")
            not_subscribed.append(data['name'])
    
    if not_subscribed:
        update.message.reply_text(
            f"‚ùå –î–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –±–æ—Ç–∞ –ø–æ–¥–ø–∏—à–∏—Ç–µ—Å—å –Ω–∞ –∫–∞–Ω–∞–ª—ã:\n" + '\n'.join(not_subscribed),
            parse_mode='Markdown',
            disable_web_page_preview=True
        )
    else:
        update.message.reply_text("‚úÖ –í—ã –ø–æ–¥–ø–∏—Å–∞–Ω—ã –Ω–∞ –≤—Å–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –∫–∞–Ω–∞–ª—ã!")

def broadcast_message(message: str, media=None):
    """–†–∞—Å—Å—ã–ª–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –≤—Å–µ–º –ø–æ–¥–ø–∏—Å—á–∏–∫–∞–º"""
    success, fail = 0, 0
    for user_id in config["subscribers"]:
        try:
            if media and os.path.exists(media):
                bot.send_photo(user_id, photo=open(media, 'rb'), caption=message)
            else:
                bot.send_message(user_id, message)
            success += 1
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ {user_id}: {str(e)}")
            fail += 1
    return success, fail

def console_interface():
    """–ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —á–µ—Ä–µ–∑ –∫–æ–Ω—Å–æ–ª—å"""
    print("\n" + "="*50)
    print("ü§ñ –¢–ï–õ–ï–ì–†–ê–ú –ë–û–¢ –ö–û–ù–¢–†–û–õ–¨ –ü–ê–ù–ï–õ–¨")
    print("="*50)
    print("1. –î–æ–±–∞–≤–∏—Ç—å –∫–æ–º–∞–Ω–¥—É")
    print("2. –î–æ–±–∞–≤–∏—Ç—å –∫–∞–Ω–∞–ª –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏")
    print("3. –°–¥–µ–ª–∞—Ç—å —Ä–∞—Å—Å—ã–ª–∫—É")
    print("4. –ü–æ–∫–∞–∑–∞—Ç—å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é")
    print("5. –ó–∞–ø—É—Å—Ç–∏—Ç—å/–ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞")
    print("6. –í—ã—Ö–æ–¥")
    
    while True:
        choice = input("\n>>> –í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ: ")
        
        if choice == "1":
            cmd = input("‚å®Ô∏è –ò–º—è –∫–æ–º–∞–Ω–¥—ã (–±–µ–∑ /): ").strip().lower()
            if not cmd:
                print("‚ùå –ò–º—è –∫–æ–º–∞–Ω–¥—ã –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º!")
                continue
                
            print("üìù –¢–∏–ø—ã –¥–µ–π—Å—Ç–≤–∏–π: text, photo, check")
            action = input("üîß –¢–∏–ø –¥–µ–π—Å—Ç–≤–∏—è: ").strip().lower()
            if action not in ["text", "photo", "check"]:
                print("‚ùå –ù–µ–ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–π —Ç–∏–ø –¥–µ–π—Å—Ç–≤–∏—è!")
                continue
                
            content = ""
            if action != "check":
                content = input("üì¶ –°–æ–¥–µ—Ä–∂–∏–º–æ–µ (—Ç–µ–∫—Å—Ç/URL —Ñ–æ—Ç–æ): ").strip()
                if not content:
                    print("‚ùå –°–æ–¥–µ—Ä–∂–∏–º–æ–µ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º!")
                    continue
            
            config["commands"][cmd] = {"action": action, "content": content}
            
            if updater and updater.running:
                dispatcher.add_handler(CommandHandler(cmd, custom_command))
                
            save_config(config)
            print(f"‚úÖ –ö–æ–º–∞–Ω–¥–∞ /{cmd} —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω–∞!")
            
        elif choice == "2":
            channel_name = input("üì¢ –ù–∞–∑–≤–∞–Ω–∏–µ –∫–∞–Ω–∞–ª–∞: ").strip()
            if not channel_name:
                print("‚ùå –ù–∞–∑–≤–∞–Ω–∏–µ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º!")
                continue
                
            channel_id = input("üî¢ ID –∫–∞–Ω–∞–ª–∞ (–Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è —Å -100): ").strip()
            if not channel_id.startswith('-100'):
                print("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç ID –∫–∞–Ω–∞–ª–∞!")
                continue
                
            config["channels"][channel_id] = {
                "name": channel_name,
                "id": channel_id
            }
            save_config(config)
            print(f"‚úÖ –ö–∞–Ω–∞–ª '{channel_name}' –¥–æ–±–∞–≤–ª–µ–Ω –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏!")
            
        elif choice == "3":
            if not config["subscribers"]:
                print("‚ùå –ù–µ—Ç –ø–æ–¥–ø–∏—Å—á–∏–∫–æ–≤ –¥–ª—è —Ä–∞—Å—Å—ã–ª–∫–∏!")
                continue
                
            msg = input("üí¨ –°–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è —Ä–∞—Å—Å—ã–ª–∫–∏: ")
            media = input("üñº –ü—É—Ç—å –∫ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—é (Enter –µ—Å–ª–∏ –±–µ–∑ –º–µ–¥–∏–∞): ").strip()
            
            print(f"‚è≥ –†–∞—Å—Å—ã–ª–∫–∞ –¥–ª—è {len(config['subscribers']} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π...")
            success, fail = broadcast_message(msg, media if media else None)
            print(f"üìä –†–µ–∑—É–ª—å—Ç–∞—Ç: {success} —É—Å–ø–µ—à–Ω–æ, {fail} –æ—à–∏–±–æ–∫")
            
        elif choice == "4":
            print("\n‚öôÔ∏è –¢–µ–∫—É—â–∞—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è:")
            print(f"üîë –¢–æ–∫–µ–Ω: {'***—É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω***' if config['token'] != '–í–ê–®_–¢–û–ö–ï–ù_–ë–û–¢–ê' else '‚ùå –ù–ï –ù–ê–°–¢–†–û–ï–ù'}")
            print(f"üÜî Admin ID: {config.get('admin_id', '‚ùå –ù–ï –ù–ê–°–¢–†–û–ï–ù')}")
            print(f"üìú –ö–æ–º–∞–Ω–¥—ã ({len(config['commands'])}):")
            for cmd, data in config["commands"].items():
                print(f"  /{cmd} -> [{data['action']}] {data['content'][:30]}{'...' if len(data['content']) > 30 else ''}")
                
            print(f"üì£ –ö–∞–Ω–∞–ª—ã ({len(config['channels'])}):")
            for channel in config["channels"].values():
                print(f"  {channel['name']} (ID: {channel['id']})")
                
            print(f"üë• –ü–æ–¥–ø–∏—Å—á–∏–∫–∏: {len(config['subscribers'])}")
            
        elif choice == "5":
            if start_bot():
                print("üü¢ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω! –î–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ Ctrl+C")
            else:
                print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é.")
            
        elif choice == "6":
            print("üëã –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Ä–∞–±–æ—Ç—ã...")
            if updater and updater.running:
                updater.stop()
            os._exit(0)

def custom_command(update: Update, context: CallbackContext):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏—Ö –∫–æ–º–∞–Ω–¥"""
    cmd = update.message.text[1:].split()[0].lower()
    if cmd in config["commands"]:
        action = config["commands"][cmd]["action"]
        content = config["commands"][cmd]["content"]
        
        try:
            if action == "text":
                update.message.reply_text(content)
            elif action == "photo":
                update.message.reply_photo(content)
            elif action == "check":
                check_subscription(update, context)
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∫–æ–º–∞–Ω–¥—ã /{cmd}: {str(e)}")
            update.message.reply_text("‚ö†Ô∏è –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã")

def start_bot():
    """–ó–∞–ø—É—Å–∫/–ø–µ—Ä–µ–∑–∞–ø—É—Å–∫ –±–æ—Ç–∞"""
    global bot, updater, dispatcher
    
    if config["token"] == "–í–ê–®_–¢–û–ö–ï–ù_–ë–û–¢–ê":
        print("‚ùå –¢–æ–∫–µ–Ω –±–æ—Ç–∞ –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω! –ó–∞–¥–∞–π—Ç–µ –µ–≥–æ –≤ bot_config.json")
        return False
        
    try:
        if updater and updater.running:
            updater.stop()
            
        bot = Bot(token=config["token"])
        updater = Updater(token=config["token"], use_context=True)
        dispatcher = updater.dispatcher
        
        dispatcher.add_handler(CommandHandler("start", start))
        dispatcher.add_handler(CommandHandler("help", help_command))
        dispatcher.add_handler(CommandHandler("check", check_subscription))
        
        for cmd in config["commands"]:
            dispatcher.add_handler(CommandHandler(cmd, custom_command))
        
        def track_subscribers(update: Update, context: CallbackContext):
            user_id = update.effective_user.id
            if user_id not in config["subscribers"]:
                config["subscribers"].append(user_id)
                save_config(config)
                
        dispatcher.add_handler(MessageHandler(Filters.all, track_subscribers))
        
        threading.Thread(
            target=updater.start_polling, 
            name="BotPollingThread",
            daemon=True
        ).start()
        
        return True
    except Exception as e:
        print(f"‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞: {str(e)}")
        return False

def graceful_shutdown(signum, frame):
    """–ö–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Ä–∞–±–æ—Ç—ã"""
    print("\nüõë –ü–æ–ª—É—á–µ–Ω —Å–∏–≥–Ω–∞–ª –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è...")
    if updater and updater.running:
        updater.stop()
        print("–ë–æ—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
    sys.exit(0)

if __name__ == "__main__":
    # –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ —Å–∏–≥–Ω–∞–ª–æ–≤
    signal.signal(signal.SIGINT, graceful_shutdown)
    signal.signal(signal.SIGTERM, graceful_shutdown)
    
    print("="*50)
    print("ü§ñ Telegram Bot Builder")
    print("üöÄ –î–∏–Ω–∞–º–∏—á–µ—Å–∫–∏ –Ω–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º—ã–π Telegram-–±–æ—Ç")
    print("="*50)
    print("‚ÑπÔ∏è –î–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–Ω—Å–æ–ª—å–Ω–æ–µ –º–µ–Ω—é")
    
    console_thread = threading.Thread(
        target=console_interface, 
        daemon=True
    )
    console_thread.start()
    
    if config["token"] != "–í–ê–®_–¢–û–ö–ï–ù_–ë–û–¢–ê" and config.get("admin_id"):
        print("\nüîé –û–±–Ω–∞—Ä—É–∂–µ–Ω–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è - –ø—Ä–æ–±—É–µ–º –∑–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞...")
        if start_bot():
            print("üü¢ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω –≤ —Ñ–æ–Ω–æ–≤–æ–º —Ä–µ–∂–∏–º–µ")
        else:
            print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ç–æ–∫–µ–Ω –≤ bot_config.json")
    else:
        print("\n‚ö†Ô∏è –í–ù–ò–ú–ê–ù–ò–ï: –ë–æ—Ç –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω!")
        print("1. –°–æ–∑–¥–∞–π—Ç–µ –±–æ—Ç–∞ —á–µ—Ä–µ–∑ @BotFather")
        print("2. –ü–æ–ª—É—á–∏—Ç–µ —Å–≤–æ–π ID —á–µ—Ä–µ–∑ @userinfobot")
        print("3. –ó–∞–ø–æ–ª–Ω–∏—Ç–µ bot_config.json\n")
    
    while True:
        console_thread.join(timeout=1)
        if not console_thread.is_alive():
            break
